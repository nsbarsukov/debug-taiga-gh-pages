(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[5771],{5771:n=>{n.exports="import {Component, inject} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport type {TuiPopover} from '@taiga-ui/cdk';\nimport type {TuiAlertOptions} from '@taiga-ui/core';\nimport {TuiAlertService, TuiButton, TuiIcon} from '@taiga-ui/core';\nimport {\n    POLYMORPHEUS_CONTEXT,\n    PolymorpheusComponent,\n    PolymorpheusOutlet,\n    PolymorpheusTemplate,\n} from '@taiga-ui/polymorpheus';\nimport {takeUntil} from 'rxjs';\n\n@Component({\n    standalone: true,\n    exportAs: \"Example5\",\n    imports: [TuiIcon],\n    template: `\n        <label style=\"display: flex; align-items: center\">\n            <em>From custom label component with</em>\n            <tui-icon icon=\"@tui.heart\" />\n        </label>\n    `,\n    changeDetection,\n})\nclass CustomLabel {}\n\n@Component({\n    standalone: true,\n    imports: [PolymorpheusOutlet, PolymorpheusTemplate],\n    template: `\n        <h4>Start content</h4>\n        <ng-container *polymorpheusOutlet=\"context.label as text; context: context\">\n            {{ text }}\n        </ng-container>\n        <h4>End content</h4>\n    `,\n    changeDetection,\n})\nclass AlertExampleWithCustomLabel {\n    protected readonly context =\n        inject<TuiPopover<TuiAlertOptions<unknown>, boolean>>(POLYMORPHEUS_CONTEXT);\n}\n\n@Component({\n    standalone: true,\n    selector: 'tui-alerts-example-5',\n    imports: [TuiButton],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    private readonly router = inject(Router);\n    private readonly alerts = inject(TuiAlertService);\n\n    private readonly notification = this.alerts\n        .open(new PolymorpheusComponent(AlertExampleWithCustomLabel), {\n            label: ({appearance}) =>\n                appearance === 'error'\n                    ? 'Error label from function'\n                    : 'Info label from function',\n            appearance: 'error',\n            autoClose: 0,\n        })\n        .pipe(takeUntil(this.router.events));\n\n    private readonly notificationWithCustomLabel = this.alerts\n        .open(new PolymorpheusComponent(AlertExampleWithCustomLabel), {\n            label: new PolymorpheusComponent(CustomLabel),\n            appearance: 'warning',\n            autoClose: 0,\n        })\n        .pipe(takeUntil(this.router.events));\n\n    protected showNotification(): void {\n        this.notification.subscribe();\n    }\n\n    protected showNotificationWithCustomLabel(): void {\n        this.notificationWithCustomLabel.subscribe();\n    }\n}\n"}}]);