"use strict";(self.webpackChunk_taiga_ui_components=self.webpackChunk_taiga_ui_components||[]).push([[48276],{48276:e=>{e.exports="import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {Observable, of, Subject} from 'rxjs';\nimport {delay, startWith, switchMap} from 'rxjs/operators';\n\nconst databaseMockData: readonly string[] = [\n    'John Cleese',\n    'Eric Idle',\n    'Michael Palin',\n    'Terry Gilliam',\n    'Terry Jones',\n    'Graham Chapman',\n];\n\n@Component({\n    selector: 'tui-input-tag-example-2',\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport class TuiInputTagExample2 {\n    private readonly search$ = new Subject<string>();\n\n    value = [];\n\n    readonly items$ = this.search$.pipe(\n        switchMap(search =>\n            this.serverRequest(search).pipe(startWith<readonly string[] | null>(null)),\n        ),\n        startWith(databaseMockData),\n    );\n\n    onSearchChange(search: string): void {\n        this.search$.next(search);\n    }\n\n    /**\n     * Server request emulation\n     */\n    private serverRequest(search: string): Observable<readonly string[]> {\n        const result = databaseMockData.filter(item =>\n            item.toLowerCase().includes(search.toLowerCase()),\n        );\n\n        return of(result).pipe(delay(Math.random() * 1000 + 500));\n    }\n}\n"}}]);