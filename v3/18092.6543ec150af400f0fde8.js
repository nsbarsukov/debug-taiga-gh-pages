(self.webpackChunk_taiga_ui_components=self.webpackChunk_taiga_ui_components||[]).push([[18092],{18092:o=>{o.exports="import {Component, Inject, Self} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiDestroyService} from '@taiga-ui/cdk';\nimport {TuiDialogService} from '@taiga-ui/core';\nimport {PolymorpheusComponent} from '@tinkoff/ng-polymorpheus';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {PayModalComponent} from './pay-modal/pay-modal.component';\n\n@Component({\n    selector: 'tui-dialog-example-9',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    encapsulation,\n    changeDetection,\n    providers: [TuiDestroyService],\n})\nexport class TuiDialogExampleComponent9 {\n    readonly amountControl = new FormControl(100);\n\n    constructor(\n        @Inject(TuiDialogService) private readonly dialogs: TuiDialogService,\n        @Self() @Inject(TuiDestroyService) private readonly destroy$: TuiDestroyService,\n    ) {}\n\n    payByCard(): void {\n        this.dialogs\n            .open(new PolymorpheusComponent(PayModalComponent), {\n                size: 'auto',\n                closeable: true,\n                data: {\n                    amount: this.amountControl.value,\n                },\n            })\n            .pipe(takeUntil(this.destroy$))\n            .subscribe();\n    }\n}\n"}}]);