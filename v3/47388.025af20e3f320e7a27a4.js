"use strict";(self.webpackChunk_taiga_ui_components=self.webpackChunk_taiga_ui_components||[]).push([[47388],{47388:(Q,l,e)=>{e.r(l),e.d(l,{IconsMappingModule:()=>E});var p=e(50506),g=e(12057),d=e(23738),c=e(33982),u=e(52404),a=e(64862),f=e(66259),r=e(67065),n=e(74788),Z=e(43560),m=e(66596),T=e(76189),y=e(88618),v=e(33772),U=e(92483),x=e(48706),I=e(64374);const h=Object.assign(Object.assign({},r.tuiKitIcons),{tuiIconCalendarLarge:"date_range-24px",tuiIconHelpCircle:"help-24px",tuiIconInfo:"info-16px",tuiIconClose:"clear-24px",tuiIconChevronLeftLarge:"keyboard_arrow_left-24px",tuiIconChevronRightLarge:"keyboard_arrow_right-24px"});let M=(()=>{class o{constructor(){this.date=null}}return o.\u0275fac=function(t){return new(t||o)},o.\u0275cmp=n.Xpm({type:o,selectors:[["tui-icons-mapping-example-1"]],features:[n._Bn([(0,a.tuiSvgOptionsProvider)({path:i=>`assets/icons/${h[i]}.svg#${h[i]}`})])],decls:2,vars:2,consts:[["tuiHintContent","You can use any icons you want",1,"tui-space_top-4",3,"tuiTextfieldCleaner","ngModel","ngModelChange"]],template:function(t,s){1&t&&(n.TgZ(0,"tui-input-date-range",0),n.NdJ("ngModelChange",function(B){return s.date=B}),n._uU(1," Pick date range\n"),n.qZA()),2&t&&n.Q6J("tuiTextfieldCleaner",!0)("ngModel",s.date)},directives:[U.H,x.d,I.b,d.JJ,d.On],encapsulation:2}),o})();var A=e(34880);let C=(()=>{class o{}return o.\u0275fac=function(t){return new(t||o)},o.\u0275cmp=n.Xpm({type:o,selectors:[["tui-icons-mapping-example-3"]],decls:20,vars:0,consts:[["routerLink","/icons/customization","tuiLink",""],["src","tuiIconPhone"],["src","assets/icons/polygon.svg"]],template:function(t,s){1&t&&(n._uU(0,"There are two types of SVG gradients:\n"),n.TgZ(1,"code"),n._uU(2,"linear"),n.qZA(),n._uU(3,"\nand\n"),n.TgZ(4,"code"),n._uU(5,"radial"),n.qZA(),n._uU(6,"\n. They are defined separately from where they are used, which promotes reusability. But you should remember that such\nsvg files can't be reusable with tui-svg inside\n"),n.TgZ(7,"code"),n._uU(8,"use"),n.qZA(),n._uU(9,"\ntag. For workaround you need to provide (or\n"),n.TgZ(10,"a",0),n._uU(11," override\n"),n.qZA(),n._uU(12,"\n) src full path to svg file. "),n._UZ(13,"br"),n._UZ(14,"br"),n._uU(15," non gradient icon:\n"),n._UZ(16,"tui-svg",1),n._UZ(17,"br"),n._uU(18,"\ngradient icon:\n"),n._UZ(19,"tui-svg",2))},directives:[c.yS,m.V,A.P],encapsulation:2}),o})();var S=e(83074),J=e(98781);function L(o,i){if(1&o&&(n.TgZ(0,"tui-doc-copy",14),n.TgZ(1,"code"),n._uU(2),n.qZA(),n.qZA()),2&o){const t=i.$implicit;n.Q6J("cdkCopyToClipboard",t),n.xp6(2),n.Oqu(t)}}let z=(()=>{class o{constructor(){this.options=e.e(93362).then(e.t.bind(e,93362,17)),this.example1={HTML:e.e(85886).then(e.t.bind(e,85886,17)),TypeScript:e.e(78900).then(e.t.bind(e,78900,17)),"./assets/icons/keyboard_arrow_right-24px.svg":e.e(33339).then(e.t.bind(e,33339,17))},this.example2={"process-icons.js":e.e(42759).then(e.t.bind(e,42759,17)),"process-icons.ts":e.e(1141).then(e.t.bind(e,1141,17))},this.example3={HTML:e.e(74437).then(e.t.bind(e,74437,17)),TypeScript:e.e(3095).then(e.t.bind(e,3095,17)),"./assets/icons/polygon.svg":e.e(79571).then(e.t.bind(e,79571,17))},this.names=Object.keys(r.tuiKitIcons),this.expanded=!1}toggle(){this.expanded=!this.expanded}}return o.\u0275fac=function(t){return new(t||o)},o.\u0275cmp=n.Xpm({type:o,selectors:[["icons-mapping"]],decls:70,vars:9,consts:[["header","Icons mapping"],["routerLink","/icons/overview","tuiLink",""],["size","xs","tuiButton","","type","button",3,"click"],[3,"expanded"],[1,"wrapper"],[3,"cdkCopyToClipboard",4,"ngFor","ngForOf"],["id","material","heading","Material icons",3,"content"],["id","processing","heading","Reusable SVG",3,"content","fullsize"],["alt","info","src","assets/images/mapping.jpg","width","100%",1,"tui-space_bottom-4"],["id","gradient","heading","Gradients in SVG",3,"content","fullsize"],["id","bundled","heading","Bundled icons",3,"fullsize"],["routerLink","/icons/bundled","tuiLink",""],[1,"tui-space_top-8"],["filename","app.module.ts",3,"code"],[3,"cdkCopyToClipboard"]],template:function(t,s){1&t&&(n.TgZ(0,"tui-doc-page",0),n.TgZ(1,"p"),n._uU(2," Taiga UI uses "),n.TgZ(3,"a",1),n.TgZ(4,"code"),n._uU(5,"tui-svg"),n.qZA(),n.qZA(),n._uU(6," component to display SVG icons. It can show icons by name, link or source code. Several icon names are hardcoded into kit components. "),n.qZA(),n.TgZ(7,"p"),n.TgZ(8,"button",2),n.NdJ("click",function(){return s.toggle()}),n._uU(9," Show predefined names "),n.qZA(),n.qZA(),n.TgZ(10,"tui-expand",3),n.TgZ(11,"div",4),n.YNc(12,L,3,2,"tui-doc-copy",5),n.qZA(),n.qZA(),n.TgZ(13,"p"),n._uU(14," These predefined names are in "),n.TgZ(15,"code"),n._uU(16,"tuiKitIcons"),n.qZA(),n._uU(17," (included "),n.TgZ(18,"code"),n._uU(19,"tuiCoreIcons"),n.qZA(),n._uU(20," ) dictionary. It is not required to provide all those icons, you can gradually add the ones you need depending on components you use. So if you want to switch to a different icon set you would need to provide own mapping, for example Material icons: "),n.qZA(),n.TgZ(21,"tui-doc-example",6),n._UZ(22,"tui-icons-mapping-example-1"),n.qZA(),n.TgZ(23,"tui-doc-example",7),n._UZ(24,"img",8),n._UZ(25,"br"),n._uU(26," By default all icons from the "),n.TgZ(27,"a",1),n._uU(28," icons pack "),n.qZA(),n._uU(29," are already reusable. But if you use your icons, as you can see in the previous example with the "),n.TgZ(30,"code"),n._uU(31,"keyboard_arrow_right-24px.svg"),n.qZA(),n._uU(32," icon, then you need to prepare svg file especially. In order to prepare such svg files, you can use our preprocessing script from "),n.TgZ(33,"code"),n._uU(34,"@taiga-ui/icons/scripts"),n.qZA(),n._uU(35," . In "),n.TgZ(36,"code"),n._uU(37,"tui-svg"),n.qZA(),n._uU(38," we use tag "),n.TgZ(39,"code"),n._uU(40,"use"),n.qZA(),n._uU(41," . The "),n.TgZ(42,"code"),n._uU(43,"use"),n.qZA(),n._uU(44," element takes nodes from within the SVG document, and duplicates them somewhere else. The effect is the same as if the nodes were deeply cloned into a non-exposed DOM, then pasted where the use element is, much like cloned template elements. This approach allows can help browser fast rendering with effectively reuse of cached svg. "),n.qZA(),n.TgZ(45,"tui-doc-example",9),n._UZ(46,"tui-icons-mapping-example-3"),n.qZA(),n.TgZ(47,"tui-doc-example",10),n.TgZ(48,"p"),n._uU(49," There are two ways to add icons: "),n.TgZ(50,"code"),n._uU(51,"bundled"),n.qZA(),n._uU(52," and as "),n.TgZ(53,"code"),n._uU(54,"assets"),n.qZA(),n._uU(55," (default). Bundled icons have the benefit of immediate display but increase your app size. Assets work like regular "),n.TgZ(56,"code"),n._uU(57,'img src="xxx"'),n.qZA(),n._uU(58," with all the benefits of network caching. In both cases you can control color with CSS "),n.TgZ(59,"code"),n._uU(60,"color"),n.qZA(),n._uU(61," style. Hardcoded icons into a js bundle can be useful if your application does not have access to the network. "),n.qZA(),n.TgZ(62,"p"),n.TgZ(63,"a",11),n._uU(64," If you want to embed icons in a js bundle use "),n.TgZ(65,"code"),n._uU(66,"SvgService"),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n.TgZ(67,"h2",12),n._uU(68,"DI options"),n.qZA(),n._UZ(69,"tui-doc-code",13),n.qZA()),2&t&&(n.xp6(10),n.Q6J("expanded",s.expanded),n.xp6(2),n.Q6J("ngForOf",s.names),n.xp6(9),n.Q6J("content",s.example1),n.xp6(2),n.Q6J("content",s.example2)("fullsize",!0),n.xp6(22),n.Q6J("content",s.example3)("fullsize",!0),n.xp6(2),n.Q6J("fullsize",!0),n.xp6(22),n.Q6J("code",s.options))},directives:[Z.q,c.yS,m.V,T.v,y.S,g.sg,v.f,M,C,S.c,J.f,p.i3],styles:[".wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}.sanitizer-example[_ngcontent-%COMP%]{display:block;padding-top:3.5rem}"],changeDetection:0}),o})(),E=(()=>{class o{}return o.\u0275fac=function(t){return new(t||o)},o.\u0275mod=n.oAB({type:o}),o.\u0275inj=n.cJS({imports:[[g.ez,d.u5,p.Iq,u.k7,a.TuiLinkModule,a.TuiExpandModule,a.TuiButtonModule,f.TuiInputDateRangeModule,a.TuiTextfieldControllerModule,u.fV,a.TuiSvgModule,c.Bz.forChild((0,u.Ve)(z))]]}),o})()}}]);