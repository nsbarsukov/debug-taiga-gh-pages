(self.webpackChunk_taiga_ui_components=self.webpackChunk_taiga_ui_components||[]).push([[67005],{67005:n=>{n.exports="import {Component, Inject, Injector} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiAlertService} from '@taiga-ui/core';\nimport {PolymorpheusComponent} from '@tinkoff/ng-polymorpheus';\nimport {Observable} from 'rxjs';\nimport {switchMap, takeUntil} from 'rxjs/operators';\n\nimport {AlertExampleWithDataComponent} from './alert-example-with-data/alert-example-with-data.component';\n\n@Component({\n    selector: 'tui-alerts-example-4',\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport class TuiAlertsExampleComponent4 {\n    readonly notification: Observable<void>;\n\n    constructor(\n        @Inject(TuiAlertService) alerts: TuiAlertService,\n        @Inject(Router) router: Router,\n        @Inject(Injector) private readonly injector: Injector,\n    ) {\n        this.notification = alerts\n            .open<number>(\n                new PolymorpheusComponent(AlertExampleWithDataComponent, this.injector),\n                {\n                    label: 'Heading is so long that it should be shown in two lines of text',\n                    data: 237,\n                    status: 'warning',\n                    autoClose: false,\n                },\n            )\n            .pipe(\n                switchMap(response =>\n                    alerts.open(`Got a value â€” ${response}`, {\n                        label: 'Information',\n                    }),\n                ),\n                takeUntil(router.events),\n            );\n    }\n\n    showNotification(): void {\n        this.notification.subscribe();\n    }\n}\n"}}]);