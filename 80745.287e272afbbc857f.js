(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[80745],{80745:(e,t,a)=>{a.r(t),a.d(t,{default:()=>p});var n=a(66094),o=a(39998),s=a(35548),r=a(28598),u=a(29655);const p=(()=>{var e;class t{constructor(){this.testForm=new n.cw({testValue1:new n.NI("A field",n.kI.required),testValue2:new n.NI("This one can be expanded",n.kI.required),testValue3:new n.NI("This one can be expanded (expandable on focus)",n.kI.required)})}}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=s.Xpm({type:e,selectors:[["ng-component"]],standalone:!0,exportAs:"Example1",features:[s.jDz],decls:10,vars:3,consts:[[3,"formGroup"],["formControlName","testValue1"],["formControlName","testValue2",1,"tui-space_top-4",3,"expandable"],["formControlName","testValue3",1,"tui-space_top-4",3,"expandable"],["textarea",""]],template:function(e,t){if(1&e&&(s.TgZ(0,"p"),s._uU(1," It has a fixed size and content scroll by default. But there is also an expandable mode with height increase from content inside\n"),s.qZA(),s.TgZ(2,"form",0)(3,"tui-textarea",1),s._uU(4,"Type a text"),s.qZA(),s.TgZ(5,"tui-textarea",2),s._uU(6," Type a text "),s.qZA(),s.TgZ(7,"tui-textarea",3,4),s._uU(9," Type a text (expandable on focus) "),s.qZA()()),2&e){const e=s.MAs(8);s.xp6(2),s.Q6J("formGroup",t.testForm),s.xp6(3),s.Q6J("expandable",!0),s.xp6(2),s.Q6J("expandable",e.focused)}},dependencies:[n.UX,n._Y,n.JJ,n.JL,n.sg,n.u,o.MuE,r.FC,u.B],encapsulation:2,changeDetection:0}),t})()}}]);