(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[38177],{38177:n=>{n.exports="import {NgForOf, NgIf} from '@angular/common';\nimport {Component} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiTable} from '@taiga-ui/addon-table';\nimport {\n    TuiAutoColorPipe,\n    TuiButton,\n    TuiDropdown,\n    TuiIcon,\n    TuiInitialsPipe,\n    TuiLink,\n    TuiTitle,\n} from '@taiga-ui/core';\nimport {\n    TuiAvatar,\n    TuiBadge,\n    TuiCheckbox,\n    TuiChip,\n    TuiItemsWithMore,\n    TuiProgressBar,\n    TuiRadioList,\n    TuiStatus,\n} from '@taiga-ui/kit';\nimport {TuiCell} from '@taiga-ui/layout';\n\n@Component({\n    standalone: true,\n    exportAs: \"Example2\",\n    imports: [\n        NgIf,\n        NgForOf,\n        FormsModule,\n        TuiTable,\n        TuiCell,\n        TuiCheckbox,\n        TuiTitle,\n        TuiAvatar,\n        TuiInitialsPipe,\n        TuiItemsWithMore,\n        TuiChip,\n        TuiProgressBar,\n        TuiButton,\n        TuiBadge,\n        TuiIcon,\n        TuiStatus,\n        TuiLink,\n        TuiAutoColorPipe,\n        TuiDropdown,\n        TuiRadioList,\n    ],\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    protected readonly sizes = ['l', 'm', 's'] as const;\n\n    protected size = this.sizes[0];\n\n    protected readonly data = [\n        {\n            checkbox: {\n                title: 'Data point 1',\n                subtitle: 'The first element',\n            },\n            title: {\n                icon: '@tui.file',\n                title: 'This is title',\n                chip: 'Chip',\n                subtitle: 'More information ãƒ» Data',\n            },\n            cell: {\n                name: 'John Cleese',\n                email: 'silly@walk.uk',\n            },\n            status: {\n                value: 'Success',\n                color: 'var(--tui-status-positive)',\n            },\n            items: ['Some', 'items', 'displayed', 'here', 'and', 'can', 'overflow'],\n            progress: 78,\n            selected: false,\n        },\n        {\n            checkbox: {\n                title: 'Some title',\n                subtitle: 'Some more text',\n            },\n            title: {\n                icon: '@tui.heart',\n                title: 'More info',\n                chip: 'Chips can be here',\n            },\n            cell: {\n                name: 'Eric Idle',\n                email: 'cool@dude.com',\n            },\n            status: {\n                value: 'Failure',\n                color: 'var(--tui-status-negative)',\n            },\n            items: ['One', 'Item'],\n            progress: 91,\n            selected: false,\n        },\n        {\n            checkbox: {\n                title: 'And now',\n                subtitle: 'Completely different',\n            },\n            title: {\n                icon: '@tui.star',\n                title: 'Wow',\n            },\n            cell: {\n                name: 'Michael Palin',\n                email: 'its@man.com',\n            },\n            status: {\n                value: 'Pending',\n                color: 'var(--tui-status-warning)',\n            },\n            items: [],\n            progress: 32,\n            selected: false,\n        },\n    ];\n\n    protected get checked(): boolean | null {\n        const every = this.data.every(({selected}) => selected);\n        const some = this.data.some(({selected}) => selected);\n\n        return every || (some && null);\n    }\n\n    protected onCheck(checked: boolean): void {\n        this.data.forEach((item) => {\n            item.selected = checked;\n        });\n    }\n}\n"}}]);